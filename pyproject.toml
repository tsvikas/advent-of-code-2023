[tool.poetry]
name = "advant-of-code-2023"
version = "0.0.0"
description = ""
authors = ["Tsvika S <tsvikas@gmail.com>"]
# optional settings:
readme = "README.md"
packages = [{include = "aoc2023"}]

[tool.poetry.dependencies]
python = "~3.11"
advent-of-code-data = "^2.0.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3"
black = "^23"
ruff = "^0.1.0"

[tool.poetry.group.typing.dependencies]
mypy = "^1"

[tool.poetry.group.testing.dependencies]
pytest = "^7"
# TODO: doctest
pytest-clarity = "^1"
pytest-cov = "^4"
pytest-pretty = "^1"
pytest-reverse = "^1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
addopts = "--doctest-modules"


[tool.mypy]
mypy_path = "stubs"
packages = "aoc2023"
strict = true


[tool.black]
target-version = ["py311"]
preview = false


[tool.ruff]
select = ["ALL"]
ignore = [
    # important, enable when possible:
    "ANN",      # flake8-annotations
    "D1",       # pydocstyle/undocumented-*
    # needed only in large codebases
    "TD002",    # flake8-todos/missing-todo-author
    "TD003",    # flake8-todos/missing-todo-link
    # incompatible with other rules
    "D203",     # pydocstyle/one-blank-line-before-class, incompatible D211
    "D212",     # pydocstyle/multi-line-summary-first-line, incompatible D213
    "D400",     # pydocstyle/ends-in-period, incompatible D415
    "COM812",   # flake8-commas/missing-trailing-comma, incompatible with black
    # wrong:
    "PD010",    # pandas-vet/pandas-use-of-dot-pivot-or-unstack
    "PD013",    # pandas-vet/pandas-use-of-dot-stack
    "EM",       # flake8-errmsg
    # annoying:
    "RET504",   # flake8-return/unnecessary-assign
    "ANN1",     # flake8-annotations/missing-type-self,missing-type-cls
    # competitions
    "INP001",   # __init__.py
    "D",        # pydocstyle
    "T201",     # print-statements
    "TRY003",   # tryceratops/raise-vanilla-args
    # ban something useful for a good reason
    # "C901",     # mccabe/complex-structure
    # "S101",     # flake8-bandit/assert
    # "FBT001",   # flake8-boolean-trap/boolean-type-hint-positional-argument
    # "FBT002",   # flake8-boolean-trap/boolean-default-value-positional-argument
    # "DTZ",      # flake8-datetimez
    # "PD901",    # pandas-vet/pandas-df-variable-name
    # "FIX",      # flake8-fixme
    # "ERA001",   # eradicate/commented-out-code
    # "PLR091",   # PyLint-Refactor/too-many-*
]
target-version = "py311"

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.per-file-ignores]
"tests/*.py" = [
    "PLR2004",  # PyLint-Refactor/magic-value-comparison
    "S101",  # flake8-bandit/assert
]
